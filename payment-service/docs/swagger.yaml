definitions:
  enums.PaymentMethodType:
    enum:
    - Credit
    - Wallet
    type: string
    x-enum-varnames:
    - Credit
    - Wallet
  enums.PaymentType:
    enum:
    - Order
    - ChargeWallet
    type: string
    x-enum-varnames:
    - Order
    - ChargeWallet
  handler.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  models.ChargeResponse:
    properties:
      amount:
        type: number
      currency:
        type: string
      customer:
        $ref: '#/definitions/models.Customer'
      description:
        type: string
      id:
        type: string
      receipt:
        $ref: '#/definitions/models.Receipt'
      redirect:
        $ref: '#/definitions/models.Redirect'
      reference:
        $ref: '#/definitions/models.Reference'
      response:
        $ref: '#/definitions/models.Response'
      status:
        $ref: '#/definitions/models.TapChargeStatus'
      threeDSecure:
        type: boolean
      transaction:
        $ref: '#/definitions/models.Transaction'
    type: object
  models.CreateChargeRequestPayload:
    properties:
      amount:
        type: number
      orderId:
        type: string
      payment_method:
        $ref: '#/definitions/enums.PaymentMethodType'
      payment_type:
        $ref: '#/definitions/enums.PaymentType'
    type: object
  models.Customer:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      phone:
        $ref: '#/definitions/models.Phone'
    type: object
  models.Expiry:
    properties:
      period:
        type: integer
      type:
        type: string
    type: object
  models.Phone:
    properties:
      country_code:
        type: string
      number:
        type: string
    type: object
  models.Receipt:
    properties:
      email:
        type: boolean
      sms:
        type: boolean
    type: object
  models.Redirect:
    properties:
      status:
        type: string
      url:
        type: string
    type: object
  models.Reference:
    properties:
      idempotent:
        type: string
      order:
        type: string
      transaction:
        type: string
    type: object
  models.Response:
    properties:
      code:
        type: string
      message:
        type: string
    type: object
  models.TapChargeStatus:
    enum:
    - INSERTED
    - INITIATED
    - ABANDONED
    - CANCELLED
    - FAILED
    - DECLINED
    - RESTRICTED
    - CAPTURED
    - VOID
    - TIMEDOUT
    - UNKNOWN
    - APPROVED
    - PENDING
    - AUTHORIZED
    - FAILED_SUCCESS
    - FAILED_VALIDATED
    - INVALID_RESPONSE
    - INSUFFICIENT_FUNDS
    type: string
    x-enum-varnames:
    - TapChargeStatusInserted
    - TapChargeStatusInitiated
    - TapChargeStatusAbandoned
    - TapChargeStatusCancelled
    - TapChargeStatusFailed
    - TapChargeStatusDeclined
    - TapChargeStatusRestricted
    - TapChargeStatusCaptured
    - TapChargeStatusVoid
    - TapChargeStatusTimedout
    - TapChargeStatusUnknown
    - TapChargeStatusApproved
    - TapChargeStatusPending
    - TapChargeStatusAuthorized
    - TapChargeStatusFailedSuccess
    - TapChargeStatusFailedValidated
    - TapChargeStatusInvalidResponse
    - TapChargeStatusInsufficientFunds
  models.Transaction:
    properties:
      amount:
        type: number
      asynchronous:
        type: boolean
      created:
        type: string
      currency:
        type: string
      expiry:
        $ref: '#/definitions/models.Expiry'
      timezone:
        type: string
      url:
        type: string
    type: object
info:
  contact: {}
paths:
  /payments:
    post:
      consumes:
      - application/json
      description: Processes a payment and returns the transaction details
      parameters:
      - description: Payment information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.CreateChargeRequestPayload'
      produces:
      - application/json
      responses:
        "200":
          description: Payment processed successfully
          schema:
            $ref: '#/definitions/models.ChargeResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Process a user payment
      tags:
      - Payments
  /payments/capture:
    post:
      consumes:
      - application/json
      description: Captures a payment after authorization
      parameters:
      - description: Payment capture information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.ChargeResponse'
      produces:
      - application/json
      responses:
        "200":
          description: Payment captured successfully
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Capture a payment
      tags:
      - Payments
swagger: "2.0"
